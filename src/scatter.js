import {ResponsiveContainer, CartesianGrid, ScatterChart, XAxis, YAxis, ZAxis, Tooltip, Legend,
Scatter} from 'recharts'
import React, { PureComponent } from 'react'


class CustomizedAxisTick extends PureComponent {
    render() {
      const {
        x, y, stroke, payload,
      } = this.props;
  
      return (
        <g transform={`translate(${x},${y})`}>
          <text x={0} y={20} dy={0} textAnchor="middle" >{Math.round(payload.value)}</text>
        </g>
      );
    }
  }

export default class Scatter_Graph extends React.Component{
    constructor(props){

        super(props)

        console.log(props.data)
        console.log(props.data["malware"])

        if(props.data){
        this.malware_data = props.data["malware"]
        this.benign_data = props.data["benign"]
        }

        this.name = "Max"
        if(props.data.average){
          this.name = "Average"
        }
    }
    render(){
        if(this.malware_data){
          console.log("Here?")
        return (

        <ResponsiveContainer width={'99%'} height={700}>
        <ScatterChart 
        margin={{ top: 20, right: 20, bottom: 10, left: 10 }}>
  
  <XAxis tick={<CustomizedAxisTick/>} dataKey="x" type="number" label={"Model Coefficients"}/>
  <YAxis dataKey="y" label={this.name.concat(" Shared APIs")}  />
  <Tooltip cursor={{ strokeDasharray: '3 3' }} />
  <Legend />

  <Scatter name="Malware" data={this.malware_data} fill="#1f77b4" />
  <Scatter name="Benign" data={this.benign_data} fill="#ff7f0e" />
</ScatterChart>
</ResponsiveContainer>

        )
    }
else{
    return (<div></div>)
}
    }
}